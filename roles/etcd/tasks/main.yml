---
- name: Copy etcd service manager config
  copy:
    src: "{{ role_path }}/files/20-etcd-service-manager.conf"
    dest: /etc/systemd/system/kubelet.service.d/200-etcd-service-manager.conf

- name: Create kubeadm config
  template:
    src: "{{ role_path }}/templates/kubeadmcfg.yaml.j2"
    dest: /tmp/kubeadmcfg.yaml

- name: Generate ca certs (master)
  shell: kubeadm init phase certs etcd-ca
  when: gen_ca_certs == true

- name: Create etcd certs
  shell: |
    kubeadm init phase certs etcd-server --config=/tmp/kubeadmcfg.yaml
    kubeadm init phase certs etcd-peer --config=/tmp/kubeadmcfg.yaml
    kubeadm init phase certs etcd-healthcheck-client --config=/tmp/kubeadmcfg.yaml
    kubeadm init phase certs apiserver-etcd-client --config=/tmp/kubeadmcfg.yaml

- name: Copy ca.crt from etcd-ca to etcd group
  synchronize:
    src: /etc/kubernetes/pki/etcd/ca.crt
    dest: /etc/kubernetes/pki/etcd/ca.crt
    delegate_to: hostvars[groups['etcd-ca'][0]].ansible_hostname
  when: inventory_hostname != hostvars[groups['etcd-ca'][0]].ansible_hostname

- name: Create etcd manifests
  shell: kubeadm init phase etcd local --config=/tmp/kubeadmcfg.yaml

- name: Set etcd container image
  replace:
    destfile: /etc/kubernetes/manifests/etcd.yaml
    regexp: '(\s+)image: k8s\.gcr\.io/etcd:3\.2\.24(\s+.*)?$'
    replace: '\1image:{{ etcd_image }}:{{ etcd_tag }}\2'

- name: Check the cluster health
  docker_container:
    image: "{{ etcd_image }}:{{ etcd_tag }}"
    network_mode: host
    volumes:
      - /etc/kubernetes:/etc/kubernetes
    detach: false
    command: etcdctl --cert-file /etc/kubernetes/pki/etcd/peer.crt --key-file /etc/kubernetes/pki/etcd/peer.key --ca-file /etc/kubernetes/pki/etcd/ca.crt --endpoints https://{{ hostvars[groups['etcd-ca'][0]].ansible_default_ipv4.address }}:2379 cluster-health
